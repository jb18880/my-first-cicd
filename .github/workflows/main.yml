name: 多环境CI/CD流水线

on:
  push:
    branches: [ main, develop ]  # 两个分支都触发
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  # 测试任务（所有分支都运行）
  test:
    runs-on: ubuntu-latest
    steps:
    - name: 检出代码
      uses: actions/checkout@v3
    
    - name: 🔍 检查必要文件
      run: |
        echo "检查网站文件是否完整..."
        files=("index.html" "style.css" "script.js")
        for file in "${files[@]}"; do
          if [ -f "$file" ]; then
            echo "✅ $file 存在"
          else
            echo "❌ $file 缺失"
            exit 1
          fi
        done
    
    - name: 🧪 HTML语法检查
      run: |
        echo "检查HTML基本语法..."
        if grep -q "<html>" index.html && grep -q "</html>" index.html; then
          echo "✅ HTML标签检查通过"
        else
          echo "❌ HTML标签不完整"
          exit 1
        fi
        
        if grep -q "<title>" index.html; then
          echo "✅ 页面标题存在"
        else
          echo "❌ 缺少页面标题"
          exit 1
        fi
    
    - name: 🔧 检查配置文件
      run: |
        echo "检查环境配置文件..."
        if [ -f "config/prod.js" ] && [ -f "config/dev.js" ]; then
          echo "✅ 环境配置文件完整"
        else
          echo "❌ 缺少环境配置文件"
          exit 1
        fi
    
    - name: 📊 分支信息
      run: |
        echo "🌿 当前分支: ${GITHUB_REF#refs/heads/}"
        echo "💻 触发事件: ${{ github.event_name }}"
        echo "👤 提交者: ${{ github.actor }}"

  # 开发环境部署
  deploy-dev:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
    
    environment:
      name: development
      url: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}-dev
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v3
      
    - name: 🔧 使用开发环境配置
      run: |
        echo "配置开发环境..."
        # 使用开发配置替换生产配置
        cp config/dev.js config/current-config.js
        
        # 修改HTML引用开发配置
        sed -i 's|config/prod.js|config/current-config.js|g' index.html
        
        echo "✅ 开发环境配置完成"
      
    - name: 🚧 添加开发环境标识
      run: |
        echo "添加开发环境特殊标识..."
        # 在title后添加开发标识
        sed -i 's|<title>\(.*\)</title>|<title>[DEV] \1</title>|g' index.html
        echo "✅ 开发环境标识添加完成"
    
    - name: 📝 显示开发环境信息
      run: |
        echo "🔍 开发环境部署信息:"
        echo "- 分支: develop"
        echo "- 环境: Development" 
        echo "- 配置: 使用开发配置文件"
        echo "- 特性: 调试模式开启，显示环境横幅"
    
    - name: 🚀 模拟部署到开发环境
      run: |
        echo "🚧 正在部署到开发环境..."
        echo "✅ 开发环境部署完成！"
        echo "🌐 开发环境地址: https://dev.yoursite.com (模拟)"

  # 生产环境部署
  deploy-prod:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v3
      
    - name: ⚙️ 使用生产环境配置
      run: |
        echo "配置生产环境..."
        # 生产环境已经默认使用prod.js，无需修改
        echo "✅ 生产环境配置确认"
      
    - name: 🏭 生产环境优化
      run: |
        echo "执行生产环境优化..."
        # 这里可以添加代码压缩、图片优化等
        echo "✅ 生产环境优化完成"
    
    - name: 📝 显示生产环境信息
      run: |
        echo "🔍 生产环境部署信息:"
        echo "- 分支: main"
        echo "- 环境: Production"
        echo "- 配置: 使用生产配置文件"
        echo "- 特性: 无调试信息，优化性能"
    
    - name: 配置GitHub Pages
      uses: actions/configure-pages@v3
      
    - name: 上传文件
      uses: actions/upload-pages-artifact@v2
      with:
        path: ./
        
    - name: 🚀 部署到生产环境
      id: deployment
      uses: actions/deploy-pages@v2
      
    - name: 🎉 生产部署成功通知
      run: |
        echo "✅ 生产环境部署成功！"
        echo "🌐 生产环境地址: ${{ steps.deployment.outputs.page_url }}"
        echo "🎯 版本: v1.2"

  # 仅PR时运行的检查
  pr-check:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
    - name: PR信息检查
      run: |
        echo "📋 Pull Request 信息:"
        echo "- 源分支: ${{ github.head_ref }}"  
        echo "- 目标分支: ${{ github.base_ref }}"
        echo "- 标题: ${{ github.event.pull_request.title }}"
        echo "✅ PR检查完成，可以合并"
