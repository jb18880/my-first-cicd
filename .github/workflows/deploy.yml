name: 测试并部署网站

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  # 测试任务
  test:
    runs-on: ubuntu-latest
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
    

    
    - name: 🧪 HTML语法检查
      run: |
        echo "检查HTML基本语法..."
        # 检查HTML标签是否配对
        if grep -q "<html>" index.html && grep -q "</html>" index.html; then
          echo "✅ HTML标签检查通过"
        else
          echo "❌ HTML标签不完整"
          exit 1
        fi
        
        # 检查是否有标题
        if grep -q "<title>" index.html; then
          echo "✅ 页面标题存在"
        else
          echo "❌ 缺少页面标题"
          exit 1
        fi
    
    - name: 📊 代码统计
      run: |
        echo "📈 代码统计信息："
        echo "HTML文件行数: $(wc -l < index.html)"
        echo "CSS文件行数: $(wc -l < style.css)" 
        echo "JS文件行数: $(wc -l < script.js)"
    
    - name: 🎯 运行自定义测试
      run: |
        if [ -f "tests/test.js" ]; then
          echo "运行自定义测试..."
          node tests/test.js
        else
          echo "没有找到自定义测试，跳过"
        fi

  # 部署任务（只有测试通过才执行）
  deploy:
    needs: test  # 关键：只有test任务成功才运行deploy
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      
    - name: 配置GitHub Pages
      uses: actions/configure-pages@v5
      
    - name: 上传文件
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./
        
    - name: 🚀 部署到GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
      
    - name: 🎉 部署成功通知
      run: |
        echo "✅ 网站部署成功！"
        echo "🌐 访问地址: ${{ steps.deployment.outputs.page_url }}"
